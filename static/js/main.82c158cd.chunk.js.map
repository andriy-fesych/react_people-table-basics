{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFound/NotFound.tsx","components/CustomPersonPage/CustomPersonPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","people","slug","length","map","person","findPerson","personName","someone","find","somebody","name","to","classNames","sex","born","died","motherName","fatherName","href","personRowRender","PeoplePage","useState","loadedPeople","setLoadedPeople","loading","setLoading","error","setError","requestStatus","setRequestStatus","useParams","id","useEffect","finally","NotFoundPage","CustomPersonPage","setPerson","el","male","female","App","role","isActive","path","element","index","replace","ReactDOM","createRoot","document","querySelector","render"],"mappings":"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","file":"static/js/main.82c158cd.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n  slug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const personRowRender = (person: Person) => {\n    const findPerson = (personName: string) => {\n      const someone = people.find(somebody => somebody.name === personName);\n\n      if (someone) {\n        return (\n          <Link\n            to={`/people/${someone.slug}`}\n            className={classNames({ 'has-text-danger': someone.sex === 'f' })}\n          >\n            {someone.name}\n          </Link>\n        );\n      }\n\n      return personName;\n    };\n\n    return (\n      <tr\n        data-cy=\"person\"\n        key={person.slug}\n        className={classNames(\n          { 'has-background-warning': slug === person.slug },\n        )}\n      >\n        <td>\n          <Link\n            to={`/people/${person.slug}`}\n            className={classNames({ 'has-text-danger': person.sex === 'f' })}\n          >\n            {person.name}\n          </Link>\n        </td>\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{person.motherName ? findPerson(person.motherName) : '-'}</td>\n        <td>{person.fatherName ? findPerson(person.fatherName) : '-'}</td>\n        <td>\n          <a\n            href={`/people/personalPage/${person.slug}`}\n          >\n            Link\n          </a>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    people.length > 0\n      ? (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n              <th>Link</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => (\n              personRowRender(person)\n            ))}\n          </tbody>\n        </table>\n      )\n      : (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [loadedPeople, setLoadedPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [requestStatus, setRequestStatus] = useState(false);\n\n  const { id = '' } = useParams();\n\n  const loadPeople = () => {\n    setLoading(true);\n    getPeople().then(people => {\n      if (people.length > 0) {\n        setLoadedPeople(people);\n      } else {\n        setError(true);\n      }\n    })\n      .finally(() => {\n        setLoading(false);\n        setRequestStatus(true);\n      });\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n      {loading && <Loader />}\n      {requestStatus && <PeopleTable people={loadedPeople} slug={id} />}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport './CustomPersonPage.scss';\n\nexport const CustomPersonPage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [person, setPerson] = useState<Person>();\n\n  useEffect(() => {\n    getPeople().then(people => {\n      setPerson(people.find(el => el.slug === slug));\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">{`Custom ${person && person.name} Page`}</h1>\n      <div className=\"mainDiv\">\n        <div className={classNames(\n          'photo',\n          {\n            male: (person && (person.sex === 'm')),\n            female: (person && (person.sex === 'f')),\n          },\n        )}\n        />\n        <div className=\"info\">\n          <table\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <tbody>\n              <tr>\n                <td>Name</td>\n                <td>{person && person.name}</td>\n              </tr>\n              <tr>\n                <td>Sex</td>\n                <td>{person && person.sex}</td>\n              </tr>\n              <tr>\n                <td>Born</td>\n                <td>{person && person.born}</td>\n              </tr>\n              <tr>\n                <td>Died</td>\n                <td>{person && person.died}</td>\n              </tr>\n              <tr>\n                <td>Mother</td>\n                <td>{person && person.motherName}</td>\n              </tr>\n              <tr>\n                <td>Father</td>\n                <td>{person && person.fatherName}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","// eslint-disable-next-line object-curly-newline\nimport { NavLink, Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFound/NotFound';\nimport { CustomPersonPage }\n  from './components/CustomPersonPage/CustomPersonPage';\n\nexport const App = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => `\n              navbar-item\n              ${!isActive && 'has-background-grey-lighter'}`}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => `\n              navbar-item\n              ${!isActive && 'has-background-grey-lighter'}`}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <div data-cy=\"app\">\n        <main className=\"section\">\n          <div className=\"container\">\n            <div className=\"block\">\n              <div className=\"box table-container\">\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"people\">\n                    <Route index element={<PeoplePage />} />\n                    <Route path=\":id\" element={<PeoplePage />} />\n                    <Route\n                      path=\"personalPage/:slug\"\n                      element={<CustomPersonPage />}\n                    />\n                  </Route>\n                  <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n                  <Route path=\"*\" element={<NotFoundPage />} />\n                </Routes>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n","// import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nReactDOM.createRoot(document.querySelector('#root'))\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n\n/* original code below ⬇\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  );\n*/\n"],"sourceRoot":""}