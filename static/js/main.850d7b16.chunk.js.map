{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFound/NotFound.tsx","components/CustomPersonPage/CustomPersonPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","length","map","findPerson","personName","someone","find","somebody","born","died","motherName","fatherName","personRowRender","PeoplePage","useState","loadedPeople","setLoadedPeople","loading","setLoading","error","setError","requestStatus","setRequestStatus","useParams","id","useEffect","catch","finally","NotFoundPage","CustomPersonPage","setPerson","el","male","female","App","role","isActive","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.850d7b16.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const personRowRender = (person: Person) => {\n    const findPerson = (personName: string) => {\n      const someone = people.find(somebody => somebody.name === personName);\n\n      if (someone) {\n        return (\n          <PersonLink person={someone} />\n        );\n      }\n\n      return personName;\n    };\n\n    return (\n      <tr\n        data-cy=\"person\"\n        key={person.slug}\n        className={classNames(\n          { 'has-background-warning': slug === person.slug },\n        )}\n      >\n        <td>\n          <Link\n            to={`/people/${person.slug}`}\n            className={classNames({ 'has-text-danger': person.sex === 'f' })}\n          >\n            {person.name}\n          </Link>\n          {/* This is hidden feature, but can not be included\n          in the render without breaking tests. Please do not\n          remove, and do not comment. :D\n          <Link\n            to={`/people/personalPage/${person.slug}`}\n          >\n            Link\n          </Link>\n          */}\n        </td>\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{person.motherName ? findPerson(person.motherName) : '-'}</td>\n        <td>{person.fatherName ? findPerson(person.fatherName) : '-'}</td>\n      </tr>\n    );\n  };\n\n  return (\n    people.length > 0\n      ? (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => (\n              personRowRender(person)\n            ))}\n          </tbody>\n        </table>\n      )\n      : (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [loadedPeople, setLoadedPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [requestStatus, setRequestStatus] = useState(false);\n\n  const { id = '' } = useParams();\n\n  const loadPeople = () => {\n    setLoading(true);\n    getPeople()\n      .then(people => {\n        setLoadedPeople(people);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n        setRequestStatus(true);\n      });\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n      {loading && <Loader />}\n      {requestStatus && <PeopleTable people={loadedPeople} slug={id} />}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport './CustomPersonPage.scss';\n\nexport const CustomPersonPage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [person, setPerson] = useState<Person>();\n\n  useEffect(() => {\n    getPeople().then(people => {\n      setPerson(people.find(el => el.slug === slug));\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">{`Custom ${person && person.name} Page`}</h1>\n      <div className=\"mainDiv\">\n        <div className={classNames(\n          'photo',\n          {\n            male: (person && (person.sex === 'm')),\n            female: (person && (person.sex === 'f')),\n          },\n        )}\n        />\n        <div className=\"info\">\n          <table\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <tbody>\n              <tr>\n                <td>Name</td>\n                <td>{person && person.name}</td>\n              </tr>\n              <tr>\n                <td>Sex</td>\n                <td>{person && person.sex}</td>\n              </tr>\n              <tr>\n                <td>Born</td>\n                <td>{person && person.born}</td>\n              </tr>\n              <tr>\n                <td>Died</td>\n                <td>{person && person.died}</td>\n              </tr>\n              <tr>\n                <td>Mother</td>\n                <td>{person && person.motherName}</td>\n              </tr>\n              <tr>\n                <td>Father</td>\n                <td>{person && person.fatherName}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFound/NotFound';\nimport { CustomPersonPage }\n  from './components/CustomPersonPage/CustomPersonPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <main className=\"section\">\n        <div className=\"container\">\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                <Route path=\"people\">\n                  <Route index element={<PeoplePage />} />\n                  <Route path=\":id\" element={<PeoplePage />} />\n                  <Route\n                    path=\"personalPage/:slug\"\n                    element={<CustomPersonPage />}\n                  />\n                </Route>\n                <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}